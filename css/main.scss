@import 'vertmiddle';


html {
  font: 100 16px "Microsoft YaHei", "WenQuanYi Micro Hei", sans-serif;
  line-height: 1.5;
}

body {
  background-color: #f8fcf3;
}

html, body {
  height: 100%;
}

#screen {
  width: 100%;
  height: 100%;
  position: relative;
}


/* 头像 */
.avatar-big {
  background-color: #ccc;

  @media (min-width: 768px) {
    width: 120px;
    height: 120px;
  }

  @media (min-width: 600px) and (max-width: 767px) {
    width: 90px;
    height: 90px;
  }

  @media (max-width: 599px) {
    width: 60px;
    height: 60px;
  }
}


/* 头像菜单 */
#person {
  @media (min-width: 600px) {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 3000;

    opacity: 0.5;

    padding: 10px;

    background-color: rgba(0, 0, 0, 0.8);
    border-radius: 0 0 10px 0;
    box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);
  }

  @media (min-width: 768px) {
    width: 120px;
    height: 120px;

    // 这是 hover 撤回时的过渡效果
    transition: width 0.25s ease, height 0.25s ease, top 0.25s ease, opacity 0.25s ease;

    &:hover {
      width: 350px;
      height: 550px;
      opacity: 1;

      // 这是 hover 开始时的过渡效果
      // 因为 :hover 覆盖了前面的同名属性所以可以做到
      transition:
        width 0.2s linear 0.5s,
        height 0.2s linear 0.5s,
        top 0.15s linear 0s,
        opacity 0.15s linear 0.15s;
    }

    &.hidden {
      // 这个也会缩起来了
      // 缩上去半个头像的高度加上一个 padding
      top: -(60px + 10px);

      &:hover {
        top: 0;
      }
    }
  }

  @media (min-width: 600px) and (max-width: 767px) {
    width: 90px;
    height: 90px;
  }

  @media (max-width: 599px) {
    width: 60px;
    height: 60px;
  }
}


/* 大区 */
#content {
  height: 100%;

  /* 让滚动条出现在这里, 而不是 window */
  overflow: auto;
}

.contentwnd {
  float: left;
  position: relative;
  width: 100%;

  @media (min-width: 768px) {
    min-height: 768px;
  }

  > .wnd-bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 50;

    > .sidewidget {
      @media (min-width: 768px) {
        position: absolute;

        min-width: 100px;
        min-height: 100px;

        &.left {
          left: 20px;
        }

        &.right {
          right: 20px;
        }
      }
    }

    // 大区名
    > .areaname {
      @extend .contentwnd > .wnd-bg > .sidewidget;
      @include vertmiddle-outer;

      top: 70px;

      // 圆形
      width: 100px;
      height: 100px;
      border-radius: 50px;

      // 这个会被大区覆盖掉的, 只有 footer "我们" 栏目用到这个默认值
      // TODO: 需要重构么...
      background-color: rgba(255, 255, 255, 0.25);

      > .areaname-inner {
        @include vertmiddle-inner;

        color: rgba(0, 0, 0, 0.5);
        text-align: center;
        font: {
          size: 40px;
        }

        transition: color 0.3s ease;

        &:hover {
          color: rgba(0, 0, 0, 0.75);
        }
      }
    }
  }

  > .contentbox {
    // 必须有明确 position 属性, z-index 才有效
    // http://www.w3schools.com/cssref/pr_pos_z-index.asp
    position: relative;
    z-index: 100;

    @media (min-width: 768px) {
      margin: 0 auto;
      width: 75%;
      min-width: 600px;
      max-width: 1600px;
    }
  }
}

.fullcontentwnd {
  @extend .contentwnd;

  height: 100%;
}


// 全局通知栏
#noticebox {
  height: 240px;
}

#areas {
  height: 100%;

  > .area {
    @extend .contentwnd;
  }
}


// footer
#footer {
  @extend .fullcontentwnd;
  color: #ccc;

  > .wnd-bg {
    background-color: #333;
  }
}


/* 顶部导航公共 */
.navclass-top {
  float: left;
  height: 100%;

  &.navclass-alignright {
    float: right;
  }

  > .navitem {
    @include vertmiddle-outer;
    float: left;

    position: relative;
    top: 0;

    height: 100%;
    color: #fff;

    padding: 0 0.75em;
    border-bottom: 0px solid;

    transition: border-bottom-width 0.1s;

    &:hover {
      border: {
        bottom: {
          width: 6px;
          // color 每个大区不同, 用脚本设置的
          // 这里是没有明确指定颜色情况下采用的默认值
          color: #666;
        }
      }
    }

    /* 放慢活跃标签变化时原先活跃的标签向上收缩的速度 */
    #topnav.hidden & {
      -webkit-transition: top 0.5s, background-color 0s 0.5s;
      -moz-transition: top 0.5s, background-color 0s 0.5s;
      -ms-transition: top 0.5s, background-color 0s 0.5s;
      -o-transition: top 0.5s, background-color 0s 0.5s;
      transition: top 0.5s, background-color 0s 0.5s;
    }

    #topnav.hidden.hover & {
      /* 不得已重复了一遍 border-bottom-width 的效果... */
      transition: top 0s, border-bottom-width 0.1s;
    }

    > .navlink {
      @include vertmiddle-inner;
    }
  }

  > .navitem-active {
    font-weight: bold;

    border: {
      bottom: {
        width: 6px;
        // 关于 color 的说明同上
        color: #666;
      }
    }

    /* 让当前活跃的大区标题在顶部导航隐藏的时候拉下来 */
    #topnav.hidden & {
      top: 42px;
      background-color: rgba(0, 0, 0, 0.5);
      transition: top 0.75s ease 0.15s;
    }

    #topnav.hidden.hover & {
      top: 0px;
      background-color: rgba(0, 0, 0, 0);
      transition: top 0.15s 0s, background-color 0.5s 0.15s;
    }
  }
}


/* 顶部导航 */
#topnavbox {
  position: fixed;
  top: 0;

  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box;

  @media (min-width: 768px) {
    // 别挡着 #content 上的滚动条
    right: 2%;
    width: 98%;
    padding: 0 0 0 140px;
  }

  @media (min-width: 600px) and (max-width: 767px) {
    padding: 0 0 0 110px;
  }

  @media (max-width: 599px) {
    padding: 0 0 0 80px;
  }
}

#topnav {
  // opacity: 0.5;
  // 这里不用 opacity 的原因主要是他会强制让子元素透明, 而且 opacity 只能
  // 削弱不能加强, 所以想实现一个不是很透明的面包屑导航就不可能了 (因为
  // 想让它随着顶端导航菜单一起升降的话只有放在 #topnav 里最干净)
  background-color: rgba(0, 0, 0, 0.75 * 0.5);

  @media (min-width: 768px) {
    position: relative;
    top: 0;
    z-index: 1500;

    width: 100%;
    height: 48px;

    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    -o-box-sizing: border-box;
    box-sizing: border-box;

    border-radius: 0 0 6px 0;

    -webkit-transition: background-color 0.15s, top 0.15s;
    -moz-transition: background-color 0.15s, top 0.15s;
    -ms-transition: background-color 0.15s, top 0.15s;
    -o-transition: background-color 0.15s, top 0.15s;
    transition: background-color 0.15s, top 0.15s;

    > .navmenu {
      width: 100%;
      height: 100%;
      // 这是为了让最右边导航项的选择效果的 border-bottom 显得不突兀
      padding: 0 6px 0 0;
    }

    .navitem {
      // 为了让 border-bottom 显示在 (未来的) breadcrumb 上方...
      // 写在这里是为了和 #topnav 的 z-index 凑近一点方便维护
      z-index: 1500;
    }

    &.hover {
      top: 0;
      // opacity: 1;
      background-color: rgba(0, 0, 0, 0.75);
    }

    &.hidden {
      top: -42px;

      &.hover {
        top: 0;
      }
    }
  }
}


// 面包屑导航
#breadcrumb {
  @media (min-width: 768px) {
    position: absolute;
    top: 48px;
    left: 0;
    z-index: 1400;

    background-color: rgba(255, 255, 255, 0.75);

    padding: 6px 1em;
    border-radius: 0 0 1em 0;
    border: {
      bottom: 1px solid rgba(0, 0, 0, 0.25);
      right: 1px solid rgba(0, 0, 0, 0.25);
    }

    font-size: 13px;

    > .crumb {
      float: left;
      opacity: 0.5;
      transition: opacity 0.1s linear;

      &:hover {
        opacity: 1;
      }

      &:after {
        // 这是一个向右的双箭头引号, 打开网页你就知道是啥了
        content: "\bb";
        margin: 0 0.4em;
      }

      &:last-child:after {
        content: "";
      }
    }
  }
}


// 夜间模式
// 覆盖层
#nightmode-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10000000;

  // 精髓, 背景色
  background-color: rgba(0, 0, 0, 0.75);

  // 关键: 让鼠标事件漏到下层的元素!!
  // IE11-, 对不住了2333333
  pointer-events: none;

  // 默认不要显示
  // 否则在页面加载完成而 Angular 运行时正在初始化的空隙里这个覆盖层会显示,
  // 等到 Angular 初始化完成它再消失, 就闪瞎狗眼了
  opacity: 0;

  // 给点动态效果
  transition: opacity 0.2s linear;

  &.enabled {
    opacity: 1;
  }
}

// 切换元素
.nightmode-toggle {
  &.toggle-on:before {
    body.zh-cn & {
      content: "\9000\51fa";  // "退出";
    }
  }

  &.toggle-off:before {
    body.zh-cn & {
      content: "\8fdb\5165";  // "进入";
    }
  }
}


/* vim:set ai et ts=2 sw=2 sts=2 fenc=utf-8: */
